import Head from "next/head";
import React, { useEffect, useState } from "react";
import { Row, Col, Button } from "react-bootstrap";
import dayjs from "dayjs";
import { convertToNumber } from "../utils/helper";
export default function Home() {
  const [state, setState] = useState({
    name: "loading",
    orders: [],
    targets: [],
    currentOrders: [],
    currentOrdersTotal: 0,
    selectedTarget: {},
  });
  const [selectedMonthIndex, setSelectedMonthIndex] = useState(0);

  useEffect(() => {
    getSheetsData();
    setSelectedMonthIndex(0);
    const interval = setInterval(() => {
      getSheetsData();
    }, 1000 * 60); // Refresh every 1 minute
    return () => {
      clearInterval(interval);
    };
  }, []);

  useEffect(() => {
    const filteredOrders = state.orders.filter(
      (order) =>
        dayjs(order.orderDate).format("MMMM") ===
        state?.targets[selectedMonthIndex]?.targetMonth
    );
    console.log(filteredOrders);
  }, [selectedMonthIndex]);

  const getSheetsData = async () => {
    setState((previous) => {
      return {
        ...previous,
        name: "loading",
      };
    });
    const response = await fetch("/api/sheets");
    if (response && response.ok) {
      const json = await response.json();
      const { orders, targets } = json.data;
      setState({
        name: "complete",
        orders,
        targets,
      });
    } else {
      setState({
        name: "error",
        orders: [],
        targets: [],
      });
    }
  };

  return (
    <div className="bg-black min-vh-100 min-vw-100 text-white ">
      <Head>
        <title>Orders</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className=" min-vh-100  h-100 d-flex flex-column justify-content-between">
        <Row className="justify-content-between align-items-center p-4">
          <Col
            xs={{ span: 12, order: 1 }}
            md={{ span: 6, order: 2 }}
            className="text-end"
          >
            Refresh In 60
          </Col>
          <Col xs={{ span: 12, order: 2 }} md={{ span: 6, order: 1 }}>
            <p>Order Dashboard</p>
            <div className="d-flex align-items-center">
              <h3>{state?.targets[selectedMonthIndex]?.targetMonth}</h3>
              <div className="d-flex">
                <Button
                  onClick={() =>
                    setSelectedMonthIndex((previous) =>
                      Math.max(0, previous - 1)
                    )
                  }
                >
                  Left
                </Button>
                <Button
                  onClick={() =>
                    setSelectedMonthIndex((previous) =>
                      Math.min(state?.targets?.length - 1, previous + 1)
                    )
                  }
                >
                  Right
                </Button>
              </div>
            </div>
          </Col>
        </Row>
        <Row className="px-4">
          <h2>
            {convertToNumber(state?.targets[selectedMonthIndex]?.targetValue)} â‚¬
          </h2>
        </Row>
        <Row className="px-4">
          <div>Progress Bar</div>
        </Row>
        <Row>
          <Col md={5}>Right Side</Col>
          <Col md={7}>Left Side</Col>
        </Row>
      </div>
    </div>
  );
}
